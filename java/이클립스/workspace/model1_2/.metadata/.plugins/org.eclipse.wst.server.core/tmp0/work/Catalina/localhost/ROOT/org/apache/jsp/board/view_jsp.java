/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/8.5.46
 * Generated at: 2019-10-04 18:05:09 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.board;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import model1.vo.Board;
import model1.dao.BoardDAO;

public final class view_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = new java.util.HashSet<>();
    _jspx_imports_classes.add("model1.vo.Board");
    _jspx_imports_classes.add("model1.dao.BoardDAO");
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    final java.lang.String _jspx_method = request.getMethod();
    if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method) && !javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET POST or HEAD");
      return;
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=utf-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("  \r\n");
      out.write("  \r\n");

  //현재 페이지로 요청한 boardId
    int boardId = Integer.parseInt(request.getParameter("boardId"));

  //게시판의 DataAccessObject(DAO) 객체 생성
    BoardDAO dao = new BoardDAO();
   //상세페이지로 오면서 조회수 업데이트
    dao.readCountUpdate(boardId);
  //현재 페이지로 요청한 boardId의 게시물 정보 조회
    Board vo = dao.getBoardInfo(boardId);

      out.write("\r\n");
      out.write("\r\n");
      out.write("<!doctype html>\r\n");
      out.write("<html lang=\"en\">\r\n");
      out.write("\t<head>\r\n");
      out.write("\t\t<meta charset=\"UTF-8\">\r\n");
      out.write("\t\t<meta name=\"Generator\" content=\"EditPlus®\">\r\n");
      out.write("\t\t<meta name=\"Author\" content=\"\">\r\n");
      out.write("\t\t<meta name=\"Keywords\" content=\"\">\r\n");
      out.write("\t\t<meta name=\"Description\" content=\"\">\r\n");
      out.write("\t\t<title>view</title>\r\n");
      out.write("\t\t<link href=\"./view.css\" rel=\"stylesheet\" type=\"text/css\" >\r\n");
      out.write("\t</head>\r\n");
      out.write("\t<body>\r\n");
      out.write("\r\n");
      out.write("\t\t<div class=\"header\">\r\n");
      out.write("\t\t\t<a href=\"../main.jsp\">로고</a>\r\n");
      out.write("\t\t</div>\r\n");
      out.write("\r\n");
      out.write("\t\t<div class=\"topnavi_ds\">\r\n");
      out.write("\t\t\t<div class=\"topnavi\">  \r\n");
      out.write("\t\t\t\t<a href=\"../intro/intro.jsp\">회사소개</a> |\t\r\n");
      out.write("\t\t\t\t<a href=\"./list.jsp\">게시판</a> | \r\n");
      out.write("\t\t\t\t<a href=\"../member/login.jsp\">로그인</a> |\r\n");
      out.write("\t\t\t\t <a href=\"../member/join.jsp\">회원가입</a>\r\n");
      out.write("\t\t\t</div>\r\n");
      out.write("\t\t</div>\r\n");
      out.write("\r\n");
      out.write("\t\t<div class=\"divide\"></div>\r\n");
      out.write("\r\n");
      out.write("\t\t<div class=\"body\"> \r\n");
      out.write("\r\n");
      out.write("\t\t\t<div class=\"modify_user\" >\r\n");
      out.write("\t\t\t\t<table>\r\n");
      out.write("\t\t\t\t\t<tr> \r\n");
      out.write("\t\t\t\t\t\t<th width=\"15%\" height=\"23\" nowrap>번호</th>\r\n");
      out.write("\t\t\t\t\t\t<td width=\"15%\">");
      out.print( vo.getBoardId() );
      out.write("</td>\r\n");
      out.write("\t\t\t\t\t\t<th width=\"15%\" height=\"23\" nowrap >조회수</th>\r\n");
      out.write("\t\t\t\t\t\t<td width=\"15%\">");
      out.print( vo.getReadCount() );
      out.write("</td>\r\n");
      out.write("\t\t\t\t\t</tr>\r\n");
      out.write("\t\t\t\t\t<tr>\r\n");
      out.write("\t\t\t\t\t\t<th width=\"15%\" height=\"23\">등록자</th>\r\n");
      out.write("\t\t\t\t\t\t<td width=\"15%\">");
      out.print( vo.getCreater() );
      out.write("</td>\r\n");
      out.write("\t\t\t\t\t\t<th width=\"15%\">등록일</th>\r\n");
      out.write("\t\t\t\t\t\t<td width=\"15%\">");
      out.print( vo.getCreateDate() );
      out.write("</td>\r\n");
      out.write("\t\t\t\t\t</tr>\r\n");
      out.write("\t\t\t\t\t<tr> \r\n");
      out.write("\t\t\t\t\t\t<th width=\"15%\" height=\"23\" nowrap >제목</th>\r\n");
      out.write("\t\t\t\t\t\t<td width=\"15%\" colspan=\"3\">");
      out.print( vo.getTitle() );
      out.write("</td>\r\n");
      out.write("\t\t\t\t\t</tr>\r\n");
      out.write("\t\t\t\t\t<tr> \r\n");
      out.write("\t\t\t\t\t\t<th width=\"15%\" height=\"23\">내용</th>\r\n");
      out.write("\t\t\t\t\t\t<td width=\"15%\" colspan=\"3\" height=\"200\">");
      out.print( vo.getContents() );
      out.write("</td>\r\n");
      out.write("\t\t\t\t\t</tr>\r\n");
      out.write("\t\t\t\t</table>\r\n");
      out.write("\t\t\t</div>\r\n");
      out.write("\t\t\t<br />\r\n");
      out.write("\t\t\t<div class=\"buttons\">\t                      \r\n");
      out.write("\t\t\t     <button onclick=\"window.location.href='./list.jsp'\">목록</button>\r\n");
      out.write("\t\t\t     <button onclick=\"window.location.href='./update.jsp?boardId=");
      out.print( vo.getBoardId() );
      out.write("'\">수정</button>&nbsp;&nbsp;\r\n");
      out.write("\t\t\t     <button onclick=\"goDeleteExcute()\">삭제</button>\t\t\t\r\n");
      out.write("\t\t\t</div>\r\n");
      out.write("\t\t</div>\r\n");
      out.write("\t</body>\r\n");
      out.write("  <script>\r\n");
      out.write("  function goDeleteExcute(){\r\n");
      out.write("     if(confirm(\"삭제하시겠습니까?\")){\r\n");
      out.write("        document.location.href = \"./delete_excute.jsp?boardId=");
      out.print( vo.getBoardId() );
      out.write("\";\r\n");
      out.write("     } else {\r\n");
      out.write("        alert(\"취소되었습니다.\");\r\n");
      out.write("     }\r\n");
      out.write("  }\r\n");
      out.write("  </script>\r\n");
      out.write("</html>\r\n");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
