<?xml version="1.0" encoding="UTF-8"?>
<web-app version="2.5" xmlns="http://java.sun.com/xml/ns/javaee"
   xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
   xsi:schemaLocation="http://java.sun.com/xml/ns/javaee https://java.sun.com/xml/ns/javaee/web-app_2_5.xsd">
   
   <!-- context : 필요한 정보를 포함하고 있는 설정 파일 -->

   <!-- The definition of the Root Spring Container shared by all Servlets and Filters -->
   <!-- xml 설정 파일 -->
   <!-- 이 컨텍스트에 등록되는 빈들은 모든 컨텍스트에서 사용되어 진다. -->
   <context-param>
      <param-name>contextConfigLocation</param-name>
      <param-value>/WEB-INF/spring/root-context.xml</param-value>
   </context-param>
   <!-- Creates the Spring Container shared by all Servlets and Filters -->
   <!-- xml -->
   <listener>
      <listener-class>org.springframework.web.context.ContextLoaderListener</listener-class>
   </listener>

   <!-- 이 컨텍스트에 등록되는 빈들은 서블릿 컨텍스트에서만 사용되어 진다. -->
   <!-- Processes application requests -->
   
   <!-- Servlet이란, URL을 통해 요청받아 요청에 해당하는 view(jsp)를 클라이언트에 어떻게  보여줄것인가에 대해 기술된 JAVA 객체
        톰캣이 Servlet에 관한 생성 소멸을 총체적으로 관리함(톰캣에 JVM이 내장되어 있음)
   -->
   <!-- Spring의 DispatcherServlet의 역활 
      1. 클라이언트가 URL로 접근하여 정보를 요청하는 것을 받음
      2. 해당 URL에 해당되는 Controller에 Method가 있는지 검색
      3. Controller에 있는 Method를 실행하고 화면 이름을 가지고옴
      4. servlet-context.xml에 설정한 화면 처리 방법을 참고하여 view파일(jsp, html 등등..)을 검색
      5. java와 html이 섞인 구문을 서블릿이 해석하고 only HTML로 만들어 줌
      6. 만들어진 HTML파일을 클라인트가 다운로드 받고 브라우저가 해석함
   -->
   <servlet>
      <servlet-name>appServlet</servlet-name>
      <servlet-class>org.springframework.web.servlet.DispatcherServlet</servlet-class>
      <init-param>
         <param-name>contextConfigLocation</param-name>
         <param-value>/WEB-INF/spring/appServlet/servlet-context.xml</param-value>
      </init-param>
      <load-on-startup>1</load-on-startup>
   </servlet>
   
   <!-- URL이  '/'로 시작하는 문자열일 때, appServlet이 매핑딤-->
   <servlet-mapping>
      <servlet-name>appServlet</servlet-name>
      <url-pattern>/</url-pattern>
   </servlet-mapping>
   
   <!-- Filter 세팅 (시작) -->
   
   <!-- encoding Filter 선언 => 필터 이름:encodingFilter, 값: UTF-8 -->
   <filter>
       <filter-name>encodingFilter</filter-name>
       <filter-class>org.springframework.web.filter.CharacterEncodingFilter</filter-class>
       <init-param>
           <param-name>encoding</param-name>
           <param-value>UTF-8</param-value>
       </init-param>
       <init-param>
           <param-name>forceEncoding</param-name>
           <param-value>true</param-value>
       </init-param>
   </filter>
    
   <!-- URL이 '/'로 시작하는 문자열일 때, encodingFilter필터를 적용 -->
   <filter-mapping>
       <filter-name>encodingFilter</filter-name>
       <url-pattern>/*</url-pattern>
   </filter-mapping>
   
   <!-- Filter 세팅 (끝) -->
</web-app>